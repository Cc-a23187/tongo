package abi

// Code autogenerated. DO NOT EDIT.

import (
	"github.com/tonkeeper/tongo/ton"
)

const (
	IUnknown ContractInterface = iota
	IDedustPool
	IDedustVault
	IDns
	IEditable
	IJettonMaster
	IJettonWallet
	ILocker
	ILockerBill
	ILockupUniversal
	ILockupVesting
	IMegatonfiExchange
	IMegatonfiRouter
	INftAuctionV1
	INftCollection
	INftItem
	INftSale
	INftSaleV1
	INftSaleV2
	IPaymentChannel
	ISbt
	IStonfiPool
	IStonfiRouter
	IStorageContract
	IStorageProvider
	ISubscriptionV1
	ITeleitem
	ITonstakePool
	ITvPool
	IValidatorController
	IWallet
	IWalletHighloadV1R1
	IWalletHighloadV1R2
	IWalletHighloadV2
	IWalletHighloadV2R1
	IWalletHighloadV2R2
	IWalletV1R1
	IWalletV1R2
	IWalletV1R3
	IWalletV2R1
	IWalletV2R2
	IWalletV3R1
	IWalletV3R2
	IWalletV4R1
	IWalletV4R2
	IWhalesPool
)

func (c ContractInterface) String() string {
	switch c {
	case IDedustPool:
		return "dedust_pool"
	case IDedustVault:
		return "dedust_vault"
	case IDns:
		return "dns"
	case IEditable:
		return "editable"
	case IJettonMaster:
		return "jetton_master"
	case IJettonWallet:
		return "jetton_wallet"
	case ILocker:
		return "locker"
	case ILockerBill:
		return "locker_bill"
	case ILockupUniversal:
		return "lockup_universal"
	case ILockupVesting:
		return "lockup_vesting"
	case IMegatonfiExchange:
		return "megatonfi_exchange"
	case IMegatonfiRouter:
		return "megatonfi_router"
	case INftAuctionV1:
		return "nft_auction_v1"
	case INftCollection:
		return "nft_collection"
	case INftItem:
		return "nft_item"
	case INftSale:
		return "nft_sale"
	case INftSaleV1:
		return "nft_sale_v1"
	case INftSaleV2:
		return "nft_sale_v2"
	case IPaymentChannel:
		return "payment_channel"
	case ISbt:
		return "sbt"
	case IStonfiPool:
		return "stonfi_pool"
	case IStonfiRouter:
		return "stonfi_router"
	case IStorageContract:
		return "storage_contract"
	case IStorageProvider:
		return "storage_provider"
	case ISubscriptionV1:
		return "subscription_v1"
	case ITeleitem:
		return "teleitem"
	case ITonstakePool:
		return "tonstake_pool"
	case ITvPool:
		return "tv_pool"
	case IValidatorController:
		return "validator_controller"
	case IWallet:
		return "wallet"
	case IWalletHighloadV1R1:
		return "wallet_highload_v1r1"
	case IWalletHighloadV1R2:
		return "wallet_highload_v1r2"
	case IWalletHighloadV2:
		return "wallet_highload_v2"
	case IWalletHighloadV2R1:
		return "wallet_highload_v2r1"
	case IWalletHighloadV2R2:
		return "wallet_highload_v2r2"
	case IWalletV1R1:
		return "wallet_v1r1"
	case IWalletV1R2:
		return "wallet_v1r2"
	case IWalletV1R3:
		return "wallet_v1r3"
	case IWalletV2R1:
		return "wallet_v2r1"
	case IWalletV2R2:
		return "wallet_v2r2"
	case IWalletV3R1:
		return "wallet_v3r1"
	case IWalletV3R2:
		return "wallet_v3r2"
	case IWalletV4R1:
		return "wallet_v4r1"
	case IWalletV4R2:
		return "wallet_v4r2"
	case IWhalesPool:
		return "whales_pool"
	default:
		return "unknown"
	}
}

var methodInvocationOrder = []MethodDescription{
	{
		Name:     "get_asset",
		InvokeFn: GetAsset,
	},
	{
		Name:     "get_assets",
		InvokeFn: GetAssets,
	},
	{
		Name:     "get_auction_info",
		InvokeFn: GetAuctionInfo,
	},
	{
		Name:     "get_authority_address",
		InvokeFn: GetAuthorityAddress,
	},
	{
		Name:     "get_balances",
		InvokeFn: GetBalances,
	},
	{
		Name:     "get_bill_amount",
		InvokeFn: GetBillAmount,
	},
	{
		Name:     "get_channel_data",
		InvokeFn: GetChannelData,
	},
	{
		Name:     "get_collection_data",
		InvokeFn: GetCollectionData,
	},
	{
		Name:     "get_domain",
		InvokeFn: GetDomain,
	},
	{
		Name:     "get_editor",
		InvokeFn: GetEditor,
	},
	{
		Name:     "get_full_domain",
		InvokeFn: GetFullDomain,
	},
	{
		Name:     "get_jetton_data",
		InvokeFn: GetJettonData,
	},
	{
		Name:     "get_last_fill_up_time",
		InvokeFn: GetLastFillUpTime,
	},
	{
		Name:     "get_locker_bill_data",
		InvokeFn: GetLockerBillData,
	},
	{
		Name:     "get_locker_data",
		InvokeFn: GetLockerData,
	},
	{
		Name:     "get_lockup_data",
		InvokeFn: GetLockupData,
	},
	{
		Name:     "get_lp_data",
		InvokeFn: GetLpData,
	},
	{
		Name:     "get_lp_mining_data",
		InvokeFn: GetLpMiningData,
	},
	{
		Name:     "get_lp_swap_data",
		InvokeFn: GetLpSwapData,
	},
	{
		Name:     "get_members_raw",
		InvokeFn: GetMembersRaw,
	},
	{
		Name:     "get_mining_data",
		InvokeFn: GetMiningData,
	},
	{
		Name:     "get_next_proof_info",
		InvokeFn: GetNextProofInfo,
	},
	{
		Name:     "get_nft_data",
		InvokeFn: GetNftData,
	},
	{
		Name:     "get_params",
		InvokeFn: GetParams,
	},
	{
		Name:     "get_plugin_list",
		InvokeFn: GetPluginList,
	},
	{
		Name:     "get_pool_data",
		InvokeFn: GetPoolData,
	},
	{
		Name:     "get_pool_full_data",
		InvokeFn: GetPoolFullData,
	},
	{
		Name:     "get_pool_status",
		InvokeFn: GetPoolStatus,
	},
	{
		Name:     "get_public_key",
		InvokeFn: GetPublicKey,
	},
	{
		Name:     "get_reserves",
		InvokeFn: GetReserves,
	},
	{
		Name:     "get_revoked_time",
		InvokeFn: GetRevokedTime,
	},
	{
		Name:     "get_router_data",
		InvokeFn: GetRouterData,
	},
	{
		Name:     "get_sale_data",
		InvokeFn: GetSaleData,
	},
	{
		Name:     "get_staking_status",
		InvokeFn: GetStakingStatus,
	},
	{
		Name:     "get_storage_contract_data",
		InvokeFn: GetStorageContractData,
	},
	{
		Name:     "get_storage_params",
		InvokeFn: GetStorageParams,
	},
	{
		Name:     "get_subscription_data",
		InvokeFn: GetSubscriptionData,
	},
	{
		Name:     "get_subwallet_id",
		InvokeFn: GetSubwalletId,
	},
	{
		Name:     "get_telemint_auction_config",
		InvokeFn: GetTelemintAuctionConfig,
	},
	{
		Name:     "get_telemint_auction_state",
		InvokeFn: GetTelemintAuctionState,
	},
	{
		Name:     "get_telemint_token_name",
		InvokeFn: GetTelemintTokenName,
	},
	{
		Name:     "get_torrent_hash",
		InvokeFn: GetTorrentHash,
	},
	{
		Name:     "get_validator_controller_data",
		InvokeFn: GetValidatorControllerData,
	},
	{
		Name:     "get_wallet_data",
		InvokeFn: GetWalletData,
	},
	{
		Name:     "get_wallet_params",
		InvokeFn: GetWalletParams,
	},
	{
		Name:     "is_active",
		InvokeFn: IsActive,
	},
	{
		Name:     "list_nominators",
		InvokeFn: ListNominators,
	},
	{
		Name:     "list_votes",
		InvokeFn: ListVotes,
	},
	{
		Name:     "royalty_params",
		InvokeFn: RoyaltyParams,
	},
	{
		Name:     "seqno",
		InvokeFn: Seqno,
	},
}

var contractInterfacesOrder = []InterfaceDescription{
	{
		Name: IDedustPool,
		Results: []string{
			"GetReserves_DedustResult",
			"GetAssets_DedustResult",
		},
	},
	{
		Name: IDedustVault,
		Results: []string{
			"GetAsset_DedustResult",
		},
	},
	{
		Name: IJettonMaster,
		Results: []string{
			"GetJettonDataResult",
		},
	},
	{
		Name: IJettonWallet,
		Results: []string{
			"GetWalletDataResult",
		},
	},
	{
		Name: ITonstakePool,
		Results: []string{
			"GetPoolFullDataResult",
		},
	},
	{
		Name: IValidatorController,
		Results: []string{
			"GetValidatorControllerDataResult",
		},
	},
	{
		Name: ILocker,
		Results: []string{
			"GetLockerDataResult",
		},
	},
	{
		Name: ILockerBill,
		Results: []string{
			"GetLockerBillDataResult",
		},
	},
	{
		Name: ILockupVesting,
		Results: []string{
			"GetLockupDataResult",
		},
	},
	{
		Name: ILockupUniversal,
		Results: []string{
			"GetBalancesResult",
		},
	},
	{
		Name: IMegatonfiRouter,
		Results: []string{
			"GetMiningData_MegatonResult",
			"GetLpData_MegatonResult",
		},
	},
	{
		Name: IMegatonfiExchange,
		Results: []string{
			"GetLpSwapData_MegatonResult",
			"GetLpMiningData_MegatonResult",
		},
	},
	{
		Name: INftSaleV1,
		Results: []string{
			"GetSaleData_BasicResult",
		},
	},
	{
		Name: INftSaleV2,
		Results: []string{
			"GetSaleData_GetgemsResult",
		},
	},
	{
		Name: INftAuctionV1,
		Results: []string{
			"GetSaleData_GetgemsAuctionResult",
		},
	},
	{
		Name: INftCollection,
		Results: []string{
			"GetCollectionDataResult",
		},
	},
	{
		Name: INftItem,
		Results: []string{
			"GetNftDataResult",
		},
	},
	{
		Name: IEditable,
		Results: []string{
			"GetEditorResult",
		},
	},
	{
		Name: ISbt,
		Results: []string{
			"GetAuthorityAddressResult",
		},
	},
	{
		Name: IPaymentChannel,
		Results: []string{
			"GetChannelDataResult",
		},
	},
	{
		Name: IStonfiPool,
		Results: []string{
			"GetPoolData_StonfiResult",
		},
	},
	{
		Name: IStonfiRouter,
		Results: []string{
			"GetRouterData_StonfiResult",
		},
	},
	{
		Name: IStorageProvider,
		Results: []string{
			"GetWalletParamsResult",
			"GetStorageParamsResult",
			"SeqnoResult",
			"GetPublicKeyResult",
		},
	},
	{
		Name: IStorageContract,
		Results: []string{
			"GetStorageContractDataResult",
			"GetTorrentHashResult",
			"IsActiveResult",
			"GetNextProofInfoResult",
		},
	},
	{
		Name: ISubscriptionV1,
		Results: []string{
			"GetSubscriptionDataResult",
		},
	},
	{
		Name: ITeleitem,
		Results: []string{
			"GetTelemintAuctionStateResult",
			"GetTelemintAuctionConfigResult",
			"GetTelemintTokenNameResult",
		},
	},
	{
		Name: ITvPool,
		Results: []string{
			"GetPoolDataResult",
			"ListNominatorsResult",
			"ListVotesResult",
		},
	},
	{
		Name: IWhalesPool,
		Results: []string{
			"GetStakingStatusResult",
			"GetPoolStatusResult",
			"GetParams_WhalesNominatorResult",
		},
	},
}

func (c ContractInterface) recursiveImplements(other ContractInterface) bool {
	switch c {
	case INftAuctionV1:
		return INftSale.Implements(other)
	case INftSaleV1:
		return INftSale.Implements(other)
	case INftSaleV2:
		return INftSale.Implements(other)
	case IWalletHighloadV1R1:
		return IWallet.Implements(other)
	case IWalletHighloadV1R2:
		return IWallet.Implements(other)
	case IWalletHighloadV2:
		return IWallet.Implements(other)
	case IWalletHighloadV2R1:
		return IWallet.Implements(other)
	case IWalletHighloadV2R2:
		return IWallet.Implements(other)
	case IWalletV1R1:
		return IWallet.Implements(other)
	case IWalletV1R2:
		return IWallet.Implements(other)
	case IWalletV1R3:
		return IWallet.Implements(other)
	case IWalletV2R1:
		return IWallet.Implements(other)
	case IWalletV2R2:
		return IWallet.Implements(other)
	case IWalletV3R1:
		return IWallet.Implements(other)
	case IWalletV3R2:
		return IWallet.Implements(other)
	case IWalletV4R1:
		return IWallet.Implements(other)
	case IWalletV4R2:
		return IWallet.Implements(other)
	}
	return false
}

var knownContracts = map[ton.Bits256]knownContractDescription{
	ton.MustParseHash("0dceed21269d66013e95b19fbb5c55a6f01adad40837baa8e521cde3a02aa46c"): {
		contractInterfaces: []ContractInterface{IWalletHighloadV1R2},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("203dd4f358adb49993129aa925cac39916b68a0e4f78d26e8f2c2b69eafa5679"): {
		contractInterfaces: []ContractInterface{IWalletHighloadV2R2},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("587cc789eff1c84f46ec3797e45fc809a14ff5ae24f1e0c7a6a99cc9dc9061ff"): {
		contractInterfaces: []ContractInterface{IWalletV1R3},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("5c9a5e68c108e18721a07c42f9956bfb39ad77ec6d624b60c576ec88eee65329"): {
		contractInterfaces: []ContractInterface{IWalletV2R1},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("64dd54805522c5be8a9db59cea0105ccf0d08786ca79beb8cb79e880a8d7322d"): {
		contractInterfaces: []ContractInterface{IWalletV4R1},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("84dafa449f98a6987789ba232358072bc0f76dc4524002a5d0918b9a75d2d599"): {
		contractInterfaces: []ContractInterface{IWalletV3R2},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("8ceb45b3cd4b5cc60eaae1c13b9c092392677fe536b2e9b2d801b62eff931fe1"): {
		contractInterfaces: []ContractInterface{IWalletHighloadV2R1},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("9494d1cc8edf12f05671a1a9ba09921096eb50811e1924ec65c3c629fbb80812"): {
		contractInterfaces: []ContractInterface{IWalletHighloadV2},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("a0cfc2c48aee16a271f2cfc0b7382d81756cecb1017d077faaab3bb602f6868c"): {
		contractInterfaces: []ContractInterface{IWalletV1R1},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("b61041a58a7980b946e8fb9e198e3c904d24799ffa36574ea4251c41a566f581"): {
		contractInterfaces: []ContractInterface{IWalletV3R1},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("d4902fcc9fad74698fa8e353220a68da0dcf72e32bcb2eb9ee04217c17d3062c"): {
		contractInterfaces: []ContractInterface{IWalletV1R2},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("d8cdbbb79f2c5caa677ac450770be0351be21e1250486de85cc52aa33dd16484"): {
		contractInterfaces: []ContractInterface{IWalletHighloadV1R1},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("fe9530d3243853083ef2ef0b4c2908c0abf6fa1c31ea243aacaa5bf8c7d753f1"): {
		contractInterfaces: []ContractInterface{IWalletV2R2},
		getMethods:         []InvokeFn{},
	},
	ton.MustParseHash("feb5ff6820e2ff0d9483e7e0d62c817d846789fb4ae580c878866d959dabd5c0"): {
		contractInterfaces: []ContractInterface{IWalletV4R2},
		getMethods: []InvokeFn{
			GetPluginList,
			GetPublicKey,
		},
	},
}
